{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica-BoldOblique;\f2\fswiss\fcharset0 Helvetica;
\f3\fswiss\fcharset0 Helvetica-Oblique;\f4\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red253\green128\blue8;\red0\green0\blue0;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c100000\c57637\c0;\cssrgb\c0\c0\c0;\csgray\c0\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww15280\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs30 \cf0 WebApp 
\f1\i CarpPond
\f0\i0  \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b0\fs24 \cf0 \

\f0\b Purpose
\f2\b0 \
Test stored and reflected XSS vulnerability.\
\

\f0\b Method
\f2\b0 \
Framework: Flask \
IDE: 	pyCharm\
DB:	progreSQL 15, pgAdmin 4 (part of postgreSQL) is used (dft pwd postgres).\
\

\f0\b Functionality
\f2\b0 \
- Creates and populates db at startup.\
- CRUD on Fishing, Fisherman / Fish.\
- XSS  \{% autoescape off %\} added at attribute \
	- "Vissoort",in Fish .html.\
	- "All "Opmerking".\
\

\f0\b Exploitation
\f2\b0 \
a. Select "Vissoort" > "Toevoegen". Specify a species like "<script>alert(1)</script>". \
instead of showing message "Vissoort <script>alert(1)</script> is toegevoegd" in the resulting detail display, an alert is displayed and then  "Vissoort <EMPTY> is toegevoegd" is shown in the resulting detail display. \
This proves the 
\f0\b reflected XSS
\f2\b0  vulnerability.\
\
b. one of the initial fishermen is  "Evil <script>alert(1)</script>". This is stored in the db as is. \
Select "Visser" > "Evil <script>alert(1)</script>": the alert is diplayed, proving a 
\f0\b stored XSS.
\f2\b0 \
\

\f0\b Preparation
\f3\i\b0 \

\f2\i0 IDE :\
1. interpreter python 3.11\
2. requirements.txt:\
	flask\
	flask-sqlalchemy\
	psycopg2-binary\
3. $ pip3 install psycopg2-binary\
\
pgAdmin 4:\
- Create database "CarpPond"\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\i \cf2 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\i0 \cf0 \

\f0\b Start the project\

\f2\b0 - In IDE, open and run app.py.\
- click on the link to http://localhost:5001\
\

\f0\b Sonar
\f2\b0  (token valid 30-days):\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs20 \cf3 \cb4 \CocoaLigature0 start console: /opt/sonarqube/bin/macosx-universal-64/sonar.sh console\
start scan: \
1. cd to CarpPond root\
2. sonar-scanner   -Dsonar.projectKey=CarpPond   -Dsonar.sources=.   -Dsonar.host.url=http://localhost:9000   -Dsonar.token=sqp_19f8881307025eefdbe639b2e6cc6d302ac4e72b
\f2\fs24 \CocoaLigature1  }